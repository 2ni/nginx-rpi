events {
}

http {
  # *****************************************************************************
  # default route, if no server_name matches
  # *****************************************************************************
  server {
    listen 80 default_server;
    location / {
      return 404;
    }
  }

  # *****************************************************************************
  # router administration
  # *****************************************************************************
  server {
    listen 80;
    server_name router.2ni.ch router;

    location / {
      proxy_pass http://192.168.1.1:8080/;
      proxy_redirect off;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header   Host             $host;
    }
  }

  # *****************************************************************************
  # oddmuse wiki
  # *****************************************************************************

  server {
    listen 80;
    server_name wiki;

    location / {
      proxy_pass http://192.168.1.10:3010/;
      proxy_redirect off;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header   Host             $host;
    }
  }

  server {
    listen 80;
    server_name 2ni.ch;
    server_tokens off;

    # needed to set up/renew letsencrypt
    location ^~ /.well-known/acme-challenge/ {
      default_type "text/plain";
      root /var/www/certbot;
    }
    location = /.well-known/acme-challenge/ {
      return 404;
    }

    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name 2ni.ch;
    server_tokens off;
    gzip on;
    error_log /log/error-2ni-ssl.log;
    access_log /log/access-2ni-ssl.log;
    ssl_certificate /etc/letsencrypt/live/2ni.ch/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/2ni.ch/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
      proxy_pass http://192.168.1.10:3010/;
      proxy_redirect off;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header   Host             $host;
    }
  }

  # *****************************************************************************
  # radio
  # *****************************************************************************
  server {
    listen 80;
    server_name radio;

    location / {
      proxy_pass http://192.168.1.10:3001/;
      proxy_redirect off;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header   Host             $host;
    }
  }

  # *****************************************************************************
  # pihole
  # *****************************************************************************
  server {
    listen 80;
    server_name pihole;

    location / {
      proxy_pass http://192.168.1.10:8089/admin/;
      proxy_redirect off;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header   Host             $host;
    }
  }

  # *****************************************************************************
  # enneagramm.compima.ch
  # *****************************************************************************
  server {
    listen 80;
    server_name enneagramm;
    server_tokens off;
    gzip on;
    error_log /log/error-enneagram-test.log;
    access_log /log/access-enneagram-test.log;

    location / {
      root /enneagram-test;
      index index.html index.htm;
      try_files $uri $uri/ /index.html;
      include /etc/nginx/mime.types;
    }
  }

  server {
    listen 80;
    server_name enneagramm.compima.ch;
    server_tokens off;

    # needed to set up/renew letsencrypt
    location ^~ /.well-known/acme-challenge/ {
      default_type "text/plain";
      root /var/www/certbot;
    }
    location = /.well-known/acme-challenge/ {
      return 404;
    }

    return 301 https://$host$request_uri;
  }

  server {
    listen 80;
    server_name enneagram.compima.ch;
    server_tokens off;
    return 301 https://enneagramm.compima.ch$request_uri;
  }

  server {
    listen 443 ssl;
    server_name enneagramm.compima.ch;
    server_tokens off;
    gzip on;
    error_log /log/error-enneagram-test-ssl.log;
    access_log /log/access-enneagram-test-ssl.log;
    ssl_certificate /etc/letsencrypt/live/enneagramm.compima.ch/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/enneagramm.compima.ch/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
      root /enneagram-test;
      index index.html index.htm;
      try_files $uri $uri/ /index.html;
      include /etc/nginx/mime.types;
    }
  }
}
